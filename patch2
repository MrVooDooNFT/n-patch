#!/usr/bin/env bash
set -euo pipefail

WORKDIR="${PWD}/nexus-build"
SRC_OFF="${WORKDIR}/nexus-cli"
SRC_EDT="${WORKDIR}/nexus-edited"

stop_running() {
  echo "[patch2] Çalışan nexus-network var mı kontrol ediliyor..."
  if command -v systemctl >/dev/null 2>&1; then
    if systemctl is-active --quiet nexus-network.service; then
      echo "[patch2] systemd: nexus-network.service durduruluyor..."
      sudo systemctl stop nexus-network.service || true
      sleep 2
    fi
  fi
  if pgrep -f "nexus-network" >/dev/null 2>&1; then
    echo "[patch2] Proses: nexus-network bulunuyor, SIGTERM gönderiliyor..."
    pkill -f "nexus-network" || true
    for i in {1..10}; do
      if pgrep -f "nexus-network" >/dev/null 2>&1; then
        sleep 1
      else
        break
      fi
    done
    if pgrep -f "nexus-network" >/dev/null 2>&1; then
      echo "[patch2] Hâlâ çalışıyor, SIGKILL gönderiliyor..."
      pkill -9 -f "nexus-network" || true
    fi
  fi
  echo "[patch2] Node kapatma kontrolü tamam."
}

overlay_threads_only() {
  echo "[patch2] Klasör kontrolü..."
  [ -d "${SRC_OFF}" ] || { echo "Resmî repo yok: ${SRC_OFF}"; exit 1; }
  [ -d "${SRC_EDT}" ] || { echo "Editli repo yok: ${SRC_EDT}"; exit 1; }
  chmod -R u+rwX "${SRC_OFF}"

  # SADECE thread hattına dokunan dosyalar:
  FILES=(
    "clients/cli/src/workers/core.rs"          # WorkerConfig + per_task_threads default
    "clients/cli/src/main.rs"                  # --per-task-threads arg parse, default
    "clients/cli/src/session/setup.rs"         # paramı zincirden geçirme
    "clients/cli/src/runtime.rs"               # WorkerConfig.per_task_threads set
    "clients/cli/src/workers/prover.rs"        # config -> pipeline'a aktarma
    "clients/cli/src/prover/pipeline.rs"       # JoinSet bounded concurrency
    "clients/cli/src/prover/handlers.rs"       # (varsa) pipeline çağrısına 4. arg
  )

  echo "[patch2] Dosyalar overlay ediliyor (threads only)..."
  for f in "${FILES[@]}"; do
    if [ -f "${SRC_EDT}/${f}" ]; then
      mkdir -p "$(dirname "${SRC_OFF}/${f}")"
      cp -f "${SRC_EDT}/${f}" "${SRC_OFF}/${f}"
      echo "  + ${f}"
    else
      echo "  - (atlandı) ${f} editli repoda yok"
    fi
  done

  # CRLF varsa temizle
  for f in "${FILES[@]}"; do
    [ -f "${SRC_OFF}/${f}" ] && dos2unix "${SRC_OFF}/${f}" >/dev/null 2>&1 || true
  done
}

build_all() {
  echo "[patch2] Derleniyor..."
  cd "${SRC_OFF}/clients/cli"
  chmod -R u+rwX .
  cargo build --release

  echo
  echo "[patch2] Tamamdır. Binary:"
  echo "  ${SRC_OFF}/clients/cli/target/release/nexus-network"
  echo
  echo "[patch2] TUI başlatma örneği:"
  echo "  ${SRC_OFF}/clients/cli/target/release/nexus-network start \\"
  echo "    --node-id 36116773 \\"
  echo "    --per-task-threads 6 \\"
  echo "    --max-difficulty extra_large_5"
}

main() {
  stop_running
  overlay_threads_only
  build_all
}

main "$@"
